#decorators modify the functionality of a function
def function1():
    print("Subscribe now")

func2=function1

del function1
func2()

def funcret(num):
    if num==0:
        return print  #we can return a function from a function
    if num==1:
        return int    #we can return a function from a function
a=funcret(1)
print(a)

#we can  a give a function as argument to a function.
def executor(func):       #func is the function which we are passing as argument to function executor.
    func("This")

executor(print)




def dec1(func1):
    def nowexec():
        print("Executing now")
        func1()
        print("Executed")
    return nowexec

def who_is_harry():
    print("Harry is a good boy")

who_is_harry()

print("\n")
who_is_harry1=dec1(who_is_harry)

who_is_harry1()

#who_is_harry1=dec1(who_is_harry) #This line will be represented as decorator.
@dec1
def who_is_harry():
    print("Harry is a good boy")
