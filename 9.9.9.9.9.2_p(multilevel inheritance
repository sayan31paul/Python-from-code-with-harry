#multilevel inheritance
class Dad:
    basketball=1

class Son(Dad):
    dance=1
    basketball=6
    def isdance(self):
        return f"Yes I dance {self.dance} no of times"

class Grandson(Son):
    dance=6
    # This class can override isdance method in class Son

    def isdance(self):
        return f"Jackson yeah. Yes I dance very awesomely {self.dance} no of times"

darry=Dad()
larry=Son()
harry=Grandson()

print(harry.isdance())
print(larry.isdance())
print(harry.basketball)

#now we are adding another attribute with same name basketball in son class.
print(harry.basketball)

"""A class first gives preference to the attributes , methods, constructors inside itself.
Then it gives preference to its immediate ancestor.
Them it gives preference the the ancestors above it."""


